<!doctype html>
<meta charset="utf8">
<link rel="stylesheet" href="./spec.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css">
<script src="./spec.js"></script>
<pre class="metadata">
title: Object.values / Object.entries
stage: 4
contributors: Jordan Harband
</pre>
<emu-clause id="Object.keys">
	<h1>Object.keys( O )</h1>
	<p>When the *keys* function is called with argument _O_, the following steps are taken:</p>
	<emu-alg>
		1. Let _obj_ be ? ToObject(_O_).
		1. Let _nameList_ be ? EnumerableOwnProperties(_obj_, *"key"*).
		1. Return CreateArrayFromList(_nameList_).
	</emu-alg>
</emu-clause>

<emu-clause id="Object.values">
	<h1>Object.values( O )</h1>
	<p>When the *values* function is called with argument _O_, the following steps are taken:</p>
	<emu-alg>
		1. Let _obj_ be ? ToObject(_O_).
		1. Let _valueList_ be ? EnumerableOwnProperties(_obj_, *"value"*).
		1. Return CreateArrayFromList(_valueList_).
	</emu-alg>
</emu-clause>

<emu-clause id="Object.entries">
	<h1>Object.entries( O )</h1>
	<p>When the *entries* function is called with argument _O_, the following steps are taken:</p>
	<emu-alg>
		1. Let _obj_ be ? ToObject(_O_).
		1. Let _entryList_ be ? EnumerableOwnProperties(_obj_, *"key+value"*).
		1. Return CreateArrayFromList(_entryList_).
	</emu-alg>
</emu-clause>

<emu-clause id="EnumerableOwnProperties" aoid="EnumerableOwnProperties">
	<h1>EnumerableOwnProperties</h1>
	<p>When the abstract operation EnumerableOwnProperties is called with Object _O_ and String _kind_ the following steps are taken:</p>
	<emu-alg>
		1. Assert: Type(_O_) is Object.
		1. Let _ownKeys_ be ? O.[[OwnPropertyKeys]]().
		1. Let _properties_ be a new empty List.
		1. Repeat, for each element _key_ of _ownKeys_ in List order
			1. If Type(_key_) is String, then
				1. Let _desc_ be ? O.[[GetOwnProperty]](_key_).
				1. If _desc_ is not *undefined* and _desc_.[[Enumerable]] is *true*, then
					1. If _kind_ is *"key"*, append _key_ to _properties_.
					1. Else,
						1. Let _value_ be ? Get(_O_, _key_).
						1. If _kind_ is *"value"*, append _value_ to _properties_.
						1. Else,
							1. Assert: _kind_ is *"key+value"*.
							1. Let _entry_ be CreateArrayFromList(&laquo; _key_, _value_ &raquo;).
							1. Append _entry_ to _properties_.
		1. Order the elements of _properties_ so they are in the same relative order as would be produced by the Iterator that would be returned if the EnumerateObjectProperties internal method was invoked with _O_.
		1. Return _properties_.
	</emu-alg>

	<p>Note: The "EnumerableOwnNames" section is deleted. Any existing references to EnumerableOwnNames(_x_) should be changed to EnumerableOwnProperties(_x_, *"key"*)</p>
</emu-clause>
